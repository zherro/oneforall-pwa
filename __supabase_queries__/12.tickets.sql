CREATE TABLE public.tickets (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	code uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamp DEFAULT now() NOT NULL,
	updated_at timestamp NULL,
	status varchar DEFAULT 'A'::character varying NOT NULL,
	deleted bool DEFAULT false NOT NULL,
	"type" varchar NOT NULL,
	name varchar NULL,
	email varchar NULL,
	instagram varchar NULL,
	phone varchar NULL,
	message text NULL,
	readed bool DEFAULT false NULL,
	status_ticket varchar NULL,
	recaptcha varchar NULL,
	CONSTRAINT tickets_pkey PRIMARY KEY (id)
);

ALTER TABLE public.tickets ADD user_id uuid DEFAULT auth.uid() NULL;
ALTER TABLE public.tickets ADD tenant_id uuid NULL;
ALTER TABLE public.tickets ADD asset_data jsonb NULL;

alter table "tickets" enable row level security;

create policy "Enable insert for authenticated and anon users only" on "public"."tickets" as permissive for insert to anon, authenticated with check (true);

create policy "Enable read access for own tickets" on "public"."tickets" as permissive for select to authenticated using ((( SELECT uid() AS uid) = user_id));